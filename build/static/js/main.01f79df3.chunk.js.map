{"version":3,"sources":["LOGO1.png","context/sitios/sitesContext.js","context/alerta/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/layout/Header.js","components/sites/Site.js","components/layout/ListadoSites.js","components/sites/Sites.js","context/alerta/alertaReducer.js","types/index.js","context/alerta/alertaState.js","context/autenticacion/authReducer.js","config/axios.js","config/token.js","context/autenticacion/authState.js","context/sitios/sitesReducer.js","context/sitios/sitesState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sitesContext","createContext","alertaContext","authContext","Login","props","useState","email","password","user","saveUser","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","cargarSitios","SitesContext","useEffect","history","push","msg","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","src","require","alt","height","id","htmlFor","type","placeholder","Header","usuarioAutenticado","cerrarSesion","href","onClick","Site","site","url_imagen","nombre","descripcion","window","open","ubicacion","_lat","_long","ListadoSites","sites","map","key","Sites","state","action","payload","AlertaState","useReducer","alertaReducer","dispatch","Provider","setTimeout","children","localStorage","setItem","removeItem","token","clienteAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","a","post","response","data","console","log","statusText","SitesState","SitesReducer","get","RutaPrivada","Component","component","render","to","App","exact","path","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.01f79df3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO1.e789692a.png\";","import { createContext } from 'react';\n\nconst sitesContext = createContext();\n\nexport default sitesContext; ","import { createContext } from 'react';\n\nconst alertaContext = createContext();\n\nexport default alertaContext; ","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext; ","import React, { useState, useContext, useEffect } from \"react\";\n\nimport SitesContext from '../../context/sitios/sitesContext'; \nimport AlertaContext from '../../context/alerta/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\n\nconst Login = (props) => {\n\n\n    // Definimos el state del usuario y la funci贸n que lo afecta\n    const [user, saveUser] = useState({\n        email: '',\n        password: ''\n    }); \n\n    // Desestructuramos la informaci贸n del usuario\n    const { email, password } = user; \n\n    // Obtenemos la alerta\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    // Autenticaci贸n\n    const authContext = useContext(AuthContext);\n    const { mensaje , autenticado, iniciarSesion } = authContext; \n\n    // Sitios\n    const sitesContext = useContext(SitesContext);\n    const { cargarSitios } = sitesContext;\n\n\n    // Controlamos cambios sobre el estado de autenticado\n    useEffect(() => {\n      if(autenticado) {\n        props.history.push('/sites');\n      }\n\n      if(mensaje) {\n        mostrarAlerta(mensaje.msg);\n      }\n\n    },[mensaje, autenticado, props.history])\n\n\n    // Detectamos cambios en el formulario\n    const onChange = e => {\n        saveUser({\n            ...user,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // Validamos y enviamos la informaci贸n \n    const onSubmit = e => {\n        e.preventDefault();\n\n        // Validar\n        if(email.trim() === '' || password.trim() === '') {\n          mostrarAlerta('Churrascomplete todos los campos por favor')\n          return; \n        }\n\n        // Action \n        iniciarSesion({\n          email,\n          password\n        });  \n        cargarSitios();\n\n    }\n\n\n\n\n  return (\n    <div className=\"container contenedor-login text-center text-light m-5\">\n      { alerta ? ( <p className=\"alert alert-danger\">{alerta.msg}</p> ): ( \n      <div className=\" primera-fila row d-flex flex-row justify-content-center\">\n        <div className=\"col- \"></div>\n\n        <div className=\"col- \">\n          <form className=\"form-signin\" onSubmit={onSubmit}>\n            <img\n              className=\"thumbnail mb-4\"\n              src={require(\"../../LOGO1.png\")}\n              alt=\"Logo Churrasco\"\n              height=\"90vh\"\n            />\n            <div className=\"input-group mb-0\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text \" id=\"basic-addon1\">\n                  <i className=\"material-icons\">account_circle</i>\n                </span>\n              </div>\n              <label htmlFor=\"email\"></label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Username\"\n                id=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={onChange}\n                ></input>\n            </div>\n\n            <div className=\"input-group mb-2\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text \" id=\"basic-addon1\">\n                  <i className=\"material-icons\">lock</i>\n                </span>\n              </div>\n              <label htmlFor=\"password\"></label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                id=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={onChange}\n              ></input>\n            </div>\n            <div>\n              <div className=\"ml-2 float-left\">\n                <input className=\"mr-2\" type=\"checkbox\" value=\"\" />\n                <label className=\"ml-0 text-muted leyenda\">remember</label>\n              </div>\n\n              <input type=\"submit\" className=\"btn boton-login float-right font-weight-bold\" value=\"Log in\"/>\n              \n            </div>\n          </form>\n        </div>\n\n        <div className=\"col- \"></div>\n      </div> \n      )} \n      <footer className=\"segunda-fila row d-flex justify-content-center align-items-end text-center text-muted\">\n        web services under your control\n      </footer>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react'\nimport AuthContext from '../../context/autenticacion/authContext'\nimport SitesContext from '../../context/sitios/sitesContext'\n\n\nconst Header = () => {\n\n    // Extraemos la informaci贸n de autenticaci贸n\n    const authContext = useContext(AuthContext);\n    const { autenticado, usuarioAutenticado, cerrarSesion } = authContext;  \n\n    const sitesContext = useContext(SitesContext);\n    const { cargarSitios } = sitesContext;\n\n\n    useEffect(() => {\n        usuarioAutenticado();\n        if(autenticado) cargarSitios(); \n    }, [])\n\n    return (\n\n        <header className=\" encabezado navbar fixed-top d-flex justify-content-end \">\n            \n            \n            <a className=\" m-2 badge font-weight-lighter text-light\" href=\"#!\">Sites</a>\n            <button className=\" boton-logout badge font-weight-lighter text-light\" onClick={() => cerrarSesion()}>Logout</button>\n            \n        </header>\n        \n    )\n}\n\nexport default Header\n\n","import React from \"react\";\n\nconst Site = ({ site }) => {\n  \n\n  return (\n            <div className=\"col-md-4 mb-3\">\n            <div className=\"card text-left\">\n                <img\n                className=\"card-img-top\"\n                src={site.url_imagen}\n                alt={`Imagen de ${site.nombre}`}\n                />\n                <h6 className=\"card-header font-weight-bolder\">{site.nombre}</h6>\n                <div className=\"card-body\">\n                <p className=\"text-truncate text-muted\">{site.descripcion}</p>\n                <a\n                    type=\"button\"\n                    href={\"#!\"}\n                    className=\"btn btn-block boton-login\"\n                    onClick={()=> window.open(`https://www.google.com/maps/place/${site.ubicacion._lat}+${site.ubicacion._long}`, \"_blank\")}\n                >\n                    Ver en Maps\n                </a>\n                </div>\n            </div>\n            </div>\n  );\n};\n\nexport default Site;\n","import React, { useContext, Fragment } from 'react';\n\nimport SitesContext from '../../context/sitios/sitesContext';\nimport Site from '../sites/Site';\n\n\n\n\nconst ListadoSites = () => {\n\n    const sitesContext = useContext(SitesContext);\n    const { sites } = sitesContext;\n\n    return (\n        <Fragment>\n            { sites ? \n\n                <div className=\" listado-sitios row mt-5\">\n                    {sites.map( site => (\n                        <Site \n                        key={site.nombre}\n                        site={site}\n                        />\n                        ))} \n                </div> : null\n            }\n\n        </Fragment>\n    );\n};\n\nexport default ListadoSites;","import React, { useContext, useEffect, Fragment } from \"react\";\n\nimport Header from \"../layout/Header\";\nimport ListadoSites from \"../layout/ListadoSites\";\nimport AuthContext from \"../../context/autenticacion/authContext\";\nimport SitesContext from \"../../context/sitios/sitesContext\";\n\nconst Sites = () => {\n  // Extraemos la informaci贸n de autenticaci贸n\n  const authContext = useContext(AuthContext);\n  const { autenticado, usuarioAutenticado } = authContext;\n\n  // Obtenemos los sitios\n  const sitesContext = useContext(SitesContext);\n  const { sites, cargarSitios } = sitesContext;\n\n  useEffect(() => {\n    \n    usuarioAutenticado();\n    if(autenticado) cargarSitios();\n\n  }, [autenticado]);\n\n\n  return (\n    <Fragment>\n      <div className=\" contenedor-sitios container text-center text-light d-flex justifiy-content-center align-items-center\">\n        <div className=\"d-flex flex-column\">\n          <Header />\n          <h2 className=\"d-flex justifiy-content-center align-items-center mb-4\">\n            {\" \"}\n            Hey! Welcome to Churrasco Travel{\" \"}\n            <i className=\"material-icons\">directions_car</i>\n            <i className=\"material-icons\">directions_boat</i>\n            <i className=\"material-icons\">flight_takeoff</i>\n          </h2>\n          <h6 className=\"d-flex justifiy-content-center align-items-center mb-3\">\n            {\" \"}\n            These are some of the destinations we can offer FOR FREE!{\" \"}\n          </h6>\n\n          <p className=\"text-muted d-flex justifiy-content-center align-items-center mb-0\">\n            DISCLAIMER: We only offer Google Maps based travels{\" \"}\n            <i className=\"material-icons\"> language</i>\n          </p>\n          <p className=\"text-muted d-flex justifiy-content-center align-items-center mb-5\">\n            If you have any issues while travelling... it's Google's fault{\" \"}\n          </p>\n          <div className=\"text-dark d-flex justifiy-content-center align-items-center\">\n            {sites ? (\n              <ListadoSites></ListadoSites>\n            ) : (\n              null\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Sites;\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types' \n\nexport default (state, action) => {\n    switch(action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA: \n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","export const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'\n\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO'\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const CERRAR_SESION = 'CERRAR_SESION'\n\nexport const ACCESO_SITIOS = 'ACCESO_SITIOS'\nexport const ACCESO_ERROR = 'ACCESO_ERROR'\n\n","import React, { useReducer } from \"react\";\nimport alertaReducer from \"./alertaReducer\";\nimport alertaContext from \"./alertaContext\";\n\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    };\n\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    const mostrarAlerta = msg => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n  return(\n        <alertaContext.Provider \n          value={{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    );\n};\n\nexport default AlertaState;\n","import { OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types' \n\nexport default (state, action) => {\n    switch(action.type) {\n        case LOGIN_EXITOSO: \n            localStorage.setItem('token', action.payload); \n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                autenticado: true,    \n            }\n        case CERRAR_SESION: \n        case LOGIN_ERROR: \n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null, \n                autenticado: null,\n                mensaje: action.payload\n            }\n            \n        default:\n            return state;\n    }\n}","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n})\n\nexport default clienteAxios; ","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clienteAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`; \n    } else {\n        delete clienteAxios.defaults.headers.common['Authorization']\n    }\n}\n\nexport default tokenAuth; ","import React, { useReducer, useContext } from 'react';\n\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer'; \nimport SitesContext from '../sitios/sitesContext';\n\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/token';\n\nimport { OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION, ACCESO_ERROR } from '../../types' \n\nconst AuthState = props => {\n\n\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        mensaje: null\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n    \n    const sitesContext = useContext(SitesContext);\n    const { cargarSitios } = sitesContext; \n\n\n    // Funciones \n\n    const iniciarSesion = async datos => {\n        //console.log('datos ', datos);\n\n        try {\n            const response = await clienteAxios.post('http://churrasco.uk.to:3005/api/auth', datos)\n            //console.log(response);\n\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: response.data\n            })\n\n            // Obtenemos el usuario autenticado\n            usuarioAutenticado(); \n\n        } catch(error) {\n            console.log(error.response);\n            // Revisar!!\n            const alerta = {\n                msg: error.response.statusText\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n\n            })\n        }\n    }\n\n    // Retornamos el usuario autenticado \n\n    const usuarioAutenticado = () => {\n        \n        const token = localStorage.getItem('token'); \n        if(token) {\n            tokenAuth(token);\n            cargarSitios(); \n            dispatch({\n                type: OBTENER_USUARIO\n            })} \n            else {\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n        \n    }\n\n    // Cierra la sesi贸n \n\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n\n    }\n\n    return(\n        <AuthContext.Provider\n        value={{\n            token: state.token,\n            autenticado: state.autenticado,\n            mensaje: state.mensaje,\n            iniciarSesion,\n            usuarioAutenticado,\n            cerrarSesion\n        }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n\n    );\n}; \n\nexport default AuthState; \n","import { ACCESO_SITIOS, ACCESO_ERROR } from '../../types' \n\nexport default (state, action) => {\n    switch(action.type) {\n        case ACCESO_SITIOS: \n            //localStorage.setItem('token', action.payload); \n            return {\n                ...state,\n                sites: action.payload\n            }\n        case ACCESO_ERROR:\n            return {\n                ...state,\n                mensaje: action.payload\n            }    \n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\n\nimport SitesContext from './sitesContext';\nimport SitesReducer from './sitesReducer'; \n\nimport clienteAxios from '../../config/axios';\n\nimport { ACCESO_SITIOS, ACCESO_ERROR } from '../../types' \n\nconst SitesState = (props) => {\n\n    const initialState = {\n        sites: null,\n    }\n\n    const [state, dispatch] = useReducer(SitesReducer, initialState);\n\n    const cargarSitios = async () => {\n        try {\n\n            const response = await clienteAxios.get('http://churrasco.uk.to:3005/api/sites')\n    \n            dispatch({\n                type: ACCESO_SITIOS,\n                payload: response.data.sites\n            })\n\n        } catch (error) { \n            \n            console.log(error);\n            const alerta = {\n                msg: error.response\n            } \n\n            dispatch({\n                type: ACCESO_ERROR,\n                payload: alerta\n            }) \n            console.log(error); \n        } \n    }\n\n\n\n\n    return (\n        <SitesContext.Provider\n            value={{\n                sites: state.sites,\n                cargarSitios\n            }}\n        >\n            {props.children}\n        </SitesContext.Provider>\n    );\n};\n\nexport default SitesState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({component: Component, ...props}) => {\n    \n    const authContext = useContext(AuthContext);\n    const { autenticado, usuarioAutenticado } = authContext; \n    \n    useEffect(() => {\n        usuarioAutenticado();\n    }, [usuarioAutenticado]);\n    \n    return (\n        <Route { ...props } render={ props => !autenticado ? (\n            <Redirect to=\"/\" />\n        ) : (\n            <Component {...props} />\n        ) }\n        \n        \n        />\n    );\n}\n\nexport default RutaPrivada; \n","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Sites from './components/sites/Sites'; \n\nimport AlertaState from './context/alerta/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport SitesState from './context/sitios/sitesState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n// Revisamos si tenemos un token \nconst token = localStorage.getItem('token');\nif(token) {\n  tokenAuth(token); \n}\n\nfunction App() {\n  return (\n\n      <SitesState>\n        <AuthState>\n          <AlertaState>\n                <Router>\n                  <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <RutaPrivada exact path=\"/sites\" component={Sites} />\n                  </Switch>\n                </Router>\n          </AlertaState>\n        </AuthState>\n      </SitesState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}